<?xml version="1.0" encoding="UTF-8"?>
<!--
This file is part of JavaSMT,
an API wrapper for a collection of SMT solvers:
https://github.com/sosy-lab/java-smt

SPDX-FileCopyrightText: 2020 Dirk Beyer <https://www.sosy-lab.org>

SPDX-License-Identifier: Apache-2.0
-->
<ivy-module version="2.0" xmlns:e="http://ant.apache.org/ivy/extra" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ant.apache.org/ivy/schemas/ivy.xsd">
    <info organisation="org.sosy_lab" module="java-smt" revision="3.6.0" status="release" publication="20200710142744">
      <license name="The Apache Software License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt"/>

      <description homepage="https://github.com/sosy-lab/java-smt">
          Java wrapper for SMT solvers like Z3, MathSAT5, SMTInterpol, Princess, CVC4, Boolector, and Yices2.
      </description>
    </info>

    <configurations>
        <!-- All dependencies that are only needed during build. -->
        

        <!-- The minimal dependencies, without any solver. -->
        <conf name="core" visibility="private" description="minimal configuration, no solver included"/>

        <!-- The normal dependencies with only one solver included. -->
        <conf name="runtime-mathsat" extends="core" description="only one solver included"/>
        <conf name="runtime-optimathsat" extends="core" description="only one solver included"/>
        <conf name="runtime-smtinterpol" extends="core" description="only one solver included"/>
        <conf name="runtime-princess" extends="core" description="only one solver included"/>
        <conf name="runtime-z3" extends="core" description="only one solver included"/>
        <conf name="runtime-cvc4" extends="core" description="only one solver included"/>
        <conf name="runtime-boolector" extends="core" description="only one solver included"/>
        <conf name="runtime-yices2" extends="core" description="only one solver included"/>

        <!-- The normal dependencies with all solvers included. -->
        <conf name="runtime" extends="runtime-without-gpl,runtime-yices2" description="all solvers included"/>

        <!-- The normal dependencies with all solvers included, except those unter GPL. -->
        <conf name="runtime-without-gpl" extends="runtime-mathsat,runtime-optimathsat,runtime-smtinterpol,runtime-princess,runtime-z3,runtime-cvc4,runtime-boolector" description="all solvers included, except those unter GPL"/>

        <!-- Dependencies needed for building or running tests. -->
        

        <!-- Dependencies needed for running source-code auto-formatter. -->
        

        <!-- Dependencies needed for running CheckStyle. -->
        

        <!-- Dependencies needed for running SpotBugs. -->
        

        <!-- Additional files like JavaDocs or source code that will help developers.
             These are not downloaded by default, but only when "ant install-contrib" is called. -->
        <conf name="contrib" visibility="private"/>

        <!-- Configuration for publishing sources -->
        <conf name="sources" description="sources of JavaSMT"/>

        <conf name="sources-all" extends="sources,contrib" description="sources of JavaSMT and its dependencies"/>
    </configurations>

    <publications defaultconf="core">
        <artifact/>

        <artifact conf="sources" e:classifier="sources" type="source" ext="jar"/>
    </publications>

    <dependencies>
        <!-- SoSy-Lab Common Library -->
        <dependency org="org.sosy_lab" name="common" rev="0.3000-427-g2475fc6" conf="core->runtime;contrib->sources"/>

        <!-- Google Core Libraries for Java
             Contains a lot of helpful data structures. -->
        <dependency org="com.google.guava" name="guava" rev="28.1-jre" revConstraint="29.0-jre" conf="core->default;contrib->sources"/>

        <!--  Guava-testlib contains many useful testing utilities -->
        <dependency org="com.google.guava" name="guava-testlib" rev="29.0-jre" conf="contrib->sources"/>

        <!-- Dependency on Ivy itself so that we can ugprade it easily.
             Change version number in build/build-ivy.xml for upgrading. -->
        

        <!-- Google Auto-Value
             Library for auto-generating value types. -->
        
        <dependency org="com.google.auto.value" name="auto-value-annotations" rev="1.6.3" revConstraint="1.7.3" conf="contrib->sources"/>

        <!-- Annotations we use for @Nullable etc. -->
        <dependency org="org.checkerframework" name="checker-qual" rev="2.0.0" revConstraint="3.5.0" conf="core->default;contrib->sources"/>

        <!-- JUnit
             Testing framework. -->
        <dependency org="junit" name="junit" rev="4.13" conf="contrib->sources"/>

        <!-- JaCoCo
             Library for code coverage -->
        

        <!-- The JUnit task for Ant so that we can run the tests.
             The property used here is defined in build.xml according to the current Ant version. -->
        
        

        <!-- Truth
             Library for writing literal assertions. -->
        <dependency org="com.google.truth" name="truth" rev="1.0.1" conf="contrib->sources"/>
        <dependency org="com.google.truth.extensions" name="truth-java8-extension" rev="1.0.1" conf="contrib->sources"/>

        <!-- Google error-prone
             Compiler adaptor with some useful checks for common errors. -->
        
        <dependency org="com.google.errorprone" name="error_prone_annotations" rev="2.4.0" conf="contrib->sources"/>

        <!-- Eclipse JDT Compiler
             For additional compiler warnings. -->
        

        <!-- google-java-format
             A source-code formatter for Java -->
        

        <!-- SpotBugs -->
        
        <!-- JAR with annotations needs to be present at runtime because we use Nullable.class -->
        <dependency org="com.github.spotbugs" name="spotbugs-annotations" rev="4.0.6" conf="core->default;contrib->sources"/>
        <dependency org="com.google.code.findbugs" name="jsr305" rev="3.0.2" conf="core->default;contrib->sources"/>

        <!-- Checkstyle -->
        
        

        <!-- SmtInterpol -->
        <dependency org="de.uni-freiburg.informatik.ultimate" name="smtinterpol" rev="2.5-604-g71e72f93" conf="runtime-smtinterpol->master;contrib->sources"/>

        <!-- Princess -->
        <dependency org="uuverifiers" name="princess_2.13" rev="2020-05-01-assertionless" conf="runtime-princess->default;contrib->sources">
          <!-- Exclude dependency on java-cup and replace it with java-cup-runtime, which is enough.
               We use the JAR that is published by us instead of the one from net.sf.squirrel-sql.thirdparty-non-maven
               because the latter does not provide a separate JAR for java-cup-runtime. -->
          <exclude org="net.sf.squirrel-sql.thirdparty-non-maven" name="java-cup"/>
        </dependency>
        <dependency org="edu.tum.cs" name="java-cup" rev="11b-20160615" conf="runtime-princess->runtime"/>

        <!-- Solver Binaries -->
        <dependency org="org.sosy_lab" name="javasmt-solver-mathsat" rev="5.6.3-sosy0" conf="runtime-mathsat->solver-mathsat"/>
        <dependency org="org.sosy_lab" name="javasmt-solver-z3" rev="4.8.8" conf="runtime-z3->solver-z3"/>
        <dependency org="org.sosy_lab" name="javasmt-solver-optimathsat" rev="1.7.1-sosy0" conf="runtime-optimathsat->solver-optimathsat"/>
        <dependency org="org.sosy_lab" name="javasmt-solver-cvc4" rev="1.8-prerelease-2020-06-24-g7825d8f28" conf="runtime-cvc4->solver-cvc4"/>
        <dependency org="org.sosy_lab" name="javasmt-solver-boolector" rev="3.2.1-15-g59c9ade5" conf="runtime-boolector->solver-boolector"/>

        <!-- additional JavaSMT components with Solver Binaries -->
        <dependency org="org.sosy_lab" name="javasmt-yices2" rev="3.5.1-203-g39ccf3c6" conf="runtime-yices2->runtime;contrib->sources"/>
        <!-- <dependency org="org.sosy_lab" name="javasmt-solver-yices2" rev="2.6.2-89-g0f77dc4b" conf="runtime-yices2->solver-yices2" /> -->

        <!-- Several JARs declare animal-sniffer-annotations.jar as dependency in their manifest although they do not really need it.
             As long as this is the case we need to provide the JAR, otherwise javac complains. -->
        <dependency org="org.codehaus.mojo" name="animal-sniffer-annotations" rev="1.18" conf="core->default"/>

        <!-- Guava has a dependency on error_prone_annotations without a revision number, need an override. -->
        <override org="com.google.errorprone" module="error_prone_annotations" rev="2.4.0"/>

    </dependencies>
</ivy-module>
